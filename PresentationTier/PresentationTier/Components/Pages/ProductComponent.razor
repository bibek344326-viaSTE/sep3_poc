@page "/products"
@using Grpc.Core
@using PresentationTier.Protos
@using PresentationTier.Services

@inject ProductService.ProductServiceClient ProductClient

<h3>Products</h3>

<input @bind="productName" placeholder="Product Name" />
<input @bind="productPrice" type="number" placeholder="Price" />
<button @onclick="AddProduct">Add Product</button>

@if (isLoading)
{
    <p><em>Loading products...</em></p>
}
else if (products.Count == 0)
{
    <p>No products available.</p>
}
else
{
    <ul>
        @foreach (var product in products)
        {
            <li>@product</li>
        }
    </ul>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}

@code {
    private string productName;
    private double productPrice;
    private List<string> products = new List<string>();
    private string errorMessage;
    private bool isLoading = true;

    private async Task AddProduct()
    {
        if (string.IsNullOrWhiteSpace(productName) || productPrice <= 0)
        {
            errorMessage = "Please enter a valid product name and price.";
            return;
        }

        var request = new ProductRequest
            {
                ProductId = Guid.NewGuid().ToString(),
                ProductName = productName,
                Price = productPrice
            };

        try
        {
            var response = await ProductClient.AddProductAsync(request);
            if (response.Success)
            {
                products.Add($"{productName} - {productPrice:C}");
                // Clear the input fields after adding the product
                productName = string.Empty;
                productPrice = 0;
            }
            else
            {
                errorMessage = "Failed to add product. Please try again.";
            }
        }
        catch (RpcException ex)
        {
            errorMessage = $"gRPC call failed: {ex.StatusCode} - {ex.Message}";
        }
        catch (Exception ex)
        {
            errorMessage = $"An unexpected error occurred: {ex.Message}";
        }
    }

    
}
